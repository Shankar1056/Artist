/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.libaml.android.view.chip.test;

public final class R {
  public static final class attr {
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipColor_=0x7f010000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipDrawable_=0x7f010001;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipLayoutDrawable_=0x7f010002;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipPaddingBottom_=0x7f010003;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipPaddingLeft_=0x7f010004;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipPaddingRight_=0x7f010005;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipPaddingTop_=0x7f010006;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipPadding_=0x7f010007;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipTextPaddingBottom_=0x7f010008;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipTextPaddingLeft_=0x7f010009;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipTextPaddingRight_=0x7f01000a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipTextPaddingTop_=0x7f01000b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipTextPadding_=0x7f01000c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int deleteIcon_=0x7f01000d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int hint_=0x7f01000e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int labelPosition_=0x7f01000f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showDeleteButton_=0x7f010010;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText_=0x7f010011;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColor_=0x7f010012;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textSize_=0x7f010013;
  }
  public static final class id {
    public static final int left=0x7f020000;
    public static final int right=0x7f020001;
  }
  public static final class string {
    public static final int app_name=0x7f030000;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a chipLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #chipLayout_android_gravity android:gravity}</code></td><td></td></tr>
     * </table>
     * @see #chipLayout_android_gravity
     */
    public static final int[] chipLayout={
        0x010100af
      };
    /**
     * Attributes that can be used with a chipLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #chipLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #chipLayout_Layout_android_layout_gravity
     */
    public static final int[] chipLayout_Layout={
        0x010100b3
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #chipLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int chipLayout_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #chipLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int chipLayout_android_gravity=0;
    /**
     * Attributes that can be used with a chip_layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #chip_layout_chipColor_ com.libaml.android.view.chip.test:chipColor_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipDrawable_ com.libaml.android.view.chip.test:chipDrawable_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipLayoutDrawable_ com.libaml.android.view.chip.test:chipLayoutDrawable_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipPaddingBottom_ com.libaml.android.view.chip.test:chipPaddingBottom_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipPaddingLeft_ com.libaml.android.view.chip.test:chipPaddingLeft_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipPaddingRight_ com.libaml.android.view.chip.test:chipPaddingRight_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipPaddingTop_ com.libaml.android.view.chip.test:chipPaddingTop_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipPadding_ com.libaml.android.view.chip.test:chipPadding_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipTextPaddingBottom_ com.libaml.android.view.chip.test:chipTextPaddingBottom_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipTextPaddingLeft_ com.libaml.android.view.chip.test:chipTextPaddingLeft_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipTextPaddingRight_ com.libaml.android.view.chip.test:chipTextPaddingRight_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipTextPaddingTop_ com.libaml.android.view.chip.test:chipTextPaddingTop_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_chipTextPadding_ com.libaml.android.view.chip.test:chipTextPadding_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_deleteIcon_ com.libaml.android.view.chip.test:deleteIcon_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_hint_ com.libaml.android.view.chip.test:hint_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_labelPosition_ com.libaml.android.view.chip.test:labelPosition_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_showDeleteButton_ com.libaml.android.view.chip.test:showDeleteButton_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_showText_ com.libaml.android.view.chip.test:showText_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_textColor_ com.libaml.android.view.chip.test:textColor_}</code></td><td></td></tr>
     * <tr><td><code>{@link #chip_layout_textSize_ com.libaml.android.view.chip.test:textSize_}</code></td><td></td></tr>
     * </table>
     * @see #chip_layout_chipColor_
     * @see #chip_layout_chipDrawable_
     * @see #chip_layout_chipLayoutDrawable_
     * @see #chip_layout_chipPaddingBottom_
     * @see #chip_layout_chipPaddingLeft_
     * @see #chip_layout_chipPaddingRight_
     * @see #chip_layout_chipPaddingTop_
     * @see #chip_layout_chipPadding_
     * @see #chip_layout_chipTextPaddingBottom_
     * @see #chip_layout_chipTextPaddingLeft_
     * @see #chip_layout_chipTextPaddingRight_
     * @see #chip_layout_chipTextPaddingTop_
     * @see #chip_layout_chipTextPadding_
     * @see #chip_layout_deleteIcon_
     * @see #chip_layout_hint_
     * @see #chip_layout_labelPosition_
     * @see #chip_layout_showDeleteButton_
     * @see #chip_layout_showText_
     * @see #chip_layout_textColor_
     * @see #chip_layout_textSize_
     */
    public static final int[] chip_layout={
        0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 
        0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 
        0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 
        0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 
        0x7f010010, 0x7f010011, 0x7f010012, 0x7f010013
      };
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipColor_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.libaml.android.view.chip.test:chipColor_
     */
    public static final int chip_layout_chipColor_=0;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipDrawable_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.libaml.android.view.chip.test:chipDrawable_
     */
    public static final int chip_layout_chipDrawable_=1;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipLayoutDrawable_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.libaml.android.view.chip.test:chipLayoutDrawable_
     */
    public static final int chip_layout_chipLayoutDrawable_=2;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipPaddingBottom_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipPaddingBottom_
     */
    public static final int chip_layout_chipPaddingBottom_=3;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipPaddingLeft_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipPaddingLeft_
     */
    public static final int chip_layout_chipPaddingLeft_=4;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipPaddingRight_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipPaddingRight_
     */
    public static final int chip_layout_chipPaddingRight_=5;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipPaddingTop_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipPaddingTop_
     */
    public static final int chip_layout_chipPaddingTop_=6;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipPadding_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipPadding_
     */
    public static final int chip_layout_chipPadding_=7;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipTextPaddingBottom_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipTextPaddingBottom_
     */
    public static final int chip_layout_chipTextPaddingBottom_=8;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipTextPaddingLeft_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipTextPaddingLeft_
     */
    public static final int chip_layout_chipTextPaddingLeft_=9;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipTextPaddingRight_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipTextPaddingRight_
     */
    public static final int chip_layout_chipTextPaddingRight_=10;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipTextPaddingTop_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipTextPaddingTop_
     */
    public static final int chip_layout_chipTextPaddingTop_=11;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#chipTextPadding_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:chipTextPadding_
     */
    public static final int chip_layout_chipTextPadding_=12;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#deleteIcon_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.libaml.android.view.chip.test:deleteIcon_
     */
    public static final int chip_layout_deleteIcon_=13;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#hint_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.libaml.android.view.chip.test:hint_
     */
    public static final int chip_layout_hint_=14;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#labelPosition_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.libaml.android.view.chip.test:labelPosition_
     */
    public static final int chip_layout_labelPosition_=15;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#showDeleteButton_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.libaml.android.view.chip.test:showDeleteButton_
     */
    public static final int chip_layout_showDeleteButton_=16;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#showText_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.libaml.android.view.chip.test:showText_
     */
    public static final int chip_layout_showText_=17;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#textColor_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.libaml.android.view.chip.test:textColor_
     */
    public static final int chip_layout_textColor_=18;
    /**
     * <p>This symbol is the offset where the {@link com.libaml.android.view.chip.test.R.attr#textSize_}
     * attribute's value can be found in the {@link #chip_layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.libaml.android.view.chip.test:textSize_
     */
    public static final int chip_layout_textSize_=19;
  }
}